{"version":3,"sources":["utils/index.ts"],"names":[],"mappings":";;AAAA;IAAA;QAkBS,kBAAa,GAAG,UAAC,SAAS;YAC/B,MAAM,CAAC,SAAS;iBACb,KAAK,CAAC,IAAI,CAAC;iBACX,GAAG,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,IAAI,EAAE,EAAX,CAAW,CAAC;iBACxB,MAAM,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,MAAM,GAAG,CAAC,EAAf,CAAe,CAAC;iBAC/B,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;QACrB,CAAC,CAAA;QAEM,uBAAkB,GAAG,UAAC,KAAa;YACxC,MAAM,CAAC,kBAAkB,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;QACxD,CAAC,CAAA;IAEH,CAAC;IA5BQ,wBAAQ,GAAf,UAAiB,GAAW;QAC1B,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,CAAC,OAAO,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;IACvF,CAAC;IAEM,0BAAU,GAAjB,UAAmB,GAAW;QAC5B,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,KAAK,OAAO,CAAC;IACvD,CAAC;IAEM,6BAAa,GAApB,UAAsB,GAAW;QAC/B,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACnE,CAAC;IAEM,0BAAU,GAAjB;QAAmB,cAAiB;aAAjB,UAAiB,EAAjB,qBAAiB,EAAjB,IAAiB;YAAjB,yBAAiB;;QAClC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACpE,CAAC;IAcH,YAAC;AAAD,CA9BA,AA8BC,IAAA;AA9BY,sBAAK","file":"index.js","sourcesContent":["export class Utils {\r\n\r\n  public isOnPrem (url: string): boolean {\r\n    return url.indexOf('.sharepoint.com') === -1 && url.indexOf('.sharepoint.cn') === -1;\r\n  }\r\n\r\n  public isUrlHttps (url: string): boolean {\r\n    return url.split('://')[0].toLowerCase() === 'https';\r\n  }\r\n\r\n  public isUrlAbsolute (url: string): boolean {\r\n    return url.indexOf('http:') === 0 || url.indexOf('https:') === 0;\r\n  }\r\n\r\n  public combineUrl (...args: string[]): string {\r\n    return args.join('/').replace(/(\\/)+/g, '/').replace(':/', '://');\r\n  }\r\n\r\n  public trimMultiline = (multiline) => {\r\n    return multiline\r\n      .split('\\n')\r\n      .map(line => line.trim())\r\n      .filter(line => line.length > 0)\r\n      .join('').trim();\r\n  }\r\n\r\n  public escapeURIComponent = (input: string): string => {\r\n    return encodeURIComponent(input.replace(/'/g, '%27'));\r\n  }\r\n\r\n}\r\n"]}